1 ВСТУП
	Огляд ПЗ


Програмна система передбачає використання смартфонів для отримання доступу до приладдя. Для втілення цієї мети, передбачається взаємодія між Mobile та IoT за допомогою бездротового протоколу передачі даних (NFC). Mobile слугує ключем авторизації, а IoT – електронним замком. Обидві складові покладаються на Backend, який надає замку інформацію про валідність наданого ключа. Крім цього, не відкидаються можливості перегляду наявних доступів, та надання нових, залежно від повноважень у системі.
Є доречним надання можливості Web версії можливостей розширеного адміністрування, для системних адміністраторів, та оформлення звітності, для менеджерів на звичних стаціонарних та напівстаціонарних системах.


1.2	Мета


Забезпечення організаціям можливість вести облік як самого наявного приладдя, так й історію його використання для проведення як основних, так і побічних робіт. Це дозволить запобігти несанкціонованому доступу до приладдя, в результаті чого очікується повний спад його недообліку. Також, закріплення приладдя за відповідальною людиною має збільшити ефективність експлуатації, а фіксування міток часу, її тривалість. Останнє дозволить своєчасно проводити технічне обслуговування й зменшити витрати у результаті невчасного обслуговування, а автоматизація цього процесу скоротить людські години витрачені на ручний облік. До того ж, впровадження функціонального використання смартфонів у робочому просторі скоротить потенційні фінансові та часові витрати на додаткові методи автентифікації. Предметна та функціональна основа такої системи покладається на використання розумних пристроїв, які й впроваджують підхід до зручного використання системи.


1.3	Межі


Програмна система впроваджує механізм відстежування, надання та впровадження дозволів. Якість використання цього механізму покладається на організацію, що його впроваджує. Програмна система не передбачає каральних дій по відношенню до неправомірних дій, поза тих процедур, які передбачила сама організація. Також передбачається сумісність лише з поширеними операційними системи для Mobile складової (Android, iOS). У рамках економії часових та грошових ресурсів, засіб верифікації у пов’язанні IoT та Mobile передбачає використання лише NFC. Звіти у форматі PDF.
 
2 ЗАГАЛЬНИЙ ОПИС
2.1	Перспективи ПЗ


Передбачається подальша можлива інтеграція з розумними девайсами, що є частиною, або самим обладнанням Організації. Розширення способів верифікації: Фізична клавіатура, біометрія. Нові формати звітів: MS Excel, MS Word.


2.2	Функції ПЗ


Ключовими особливостями ПЗ є:
	Контроль експлуатації обладнання для запобігання ризиків
	Посилення самовідповідальності серед співробітників
	Простота експлуатації для співробітників
	Масштабованість об’єктів контролю
Загальна функція ПЗ полягає у регулюванні доступу до устаткування організації, керування доступами та звітність стосовно здійснених операцій.

2.3	Характеристики користувачів

Початково, розглядається три каскадні рівні доступу: Адміністратор, Секретар, Користувач. Адміністратор має доступ до перегляду, додавання, редагування та видалення всіх даних. Секретар може лише переглядати всі дані. Користувач просто має здатність взаємодіяти із системою.


2.4	Загальні обмеження


Визначеним середовищем є приміщення організації. Це природньо збільшує якість роботи програмної системи, що є позитивним фактором сприйняття його користувачами (співробітниками). Звісно, це не опускає межу якості забезпечення цілісності та безпеки передаваних даних. Ці два фактори будуть ключовими у межах важливості охоплюваного функціоналу.
Для функціонування Backend складової, передбачається використання ASP.NET, бібліотека  iText7 для створення звітів у форматі PDF, також пов’язаний Web на базі Razor Pages. Задіяний IoT, зважаючи на відношення потреб (GPIO, Wi-Fi) ціни та якості, на базі ESP32. СУБД - PostreSQL


2.5	Припущення й залежності


Припускається зростання якості експлуатації обладнання організацій, які будуть користуватися цим програмним забезпеченням. Залежність покладається на популярні фреймворки для розробки всіх частин програмного забезпечення.
 
3 КОНКРЕТНІ ВИМОГИ
3.1	Вимоги до зовнішніх інтерфейсів


Зовнішні інтерфейси мають мати засоби взаємодії з користувачем, та іншими пристроями. В ролі останніх можуть виступати як сервер, так і IoT.


3.1.1	Інтерфейс користувача


Інтерфейс взаємодії безпосередньо з користувачем вимагається для Web та Mobile реалізаціями, шляхом використовування сенсорних дисплеїв, клавіатур чи комп’ютерних миш.
Користувачів Web зустрічає головна сторінка з обмеженим функціоналом, для його розблокування доступна аутентифікація. Після чого, у шапці сайту, стають доступними нові розділи: «Моделі» та «Звіти». Розділ «Моделі» доступний для користувачів з рівнем адміністратора й надає CRUD функціонал. Розділ «Звіти» доступний для користувачів з рівнем секретаря та вище й надає функціонал для формування звітів (витяг з бази даних за вказаними критеріями). Прецедентне представлення зображене на рисунку 1, компонентне – на рисунку 2. Для звітів доступно обирати необхідні стовпці з доступних моделей, та вказувати обмеження (фільтри) для обраних стовпців. Для текстових даних – не чутлива до регістру відповідність частини тексту, для числових – повний збіг, для дат – діапазон (від/до).
 
Рисунок 3.1 – UML діаграма прецедентів користувачів Web
 Рисунок 3.2 – UML діаграма компонентів Web

Користувачів Mobile зустрічає домашня сторінка. У разі відсутності заголовка авторизації у безпечному сховищі програми [1] – випливає вікно авторизації. Мобільний додаток має три вкладки взаємодії. Вкладка «Пристрої» дозволяє переглянути доступні для взаємодії пристрої та термін спливу дозволів на взаємодію з ними. Всім користувачам дозволено переглядати учасників відповідного пристрою. Користувачі, зі спеціальним дозволом для відповідного пристрою, можуть видаляти або додавати нових учасників, при цьому вказуючи (додаючи) вказується термін спливу дозволу та надання спеціального – для маніпулювання учасниками (рис. 3). Вкладка «Користувач» дозволяє переглянути інформацію про себе та вийти з аккаунту. Також, фоном, доступна взаємодія з цільовими пристроями за допомогою NFC модуля мобільного пристрою.
 
Рисунок 3.3 – UML діаграма прецедентів Mobile




3.1.2	Апаратний інтерфейс


	Очікуваний апаратний інтерфейс передбачає наявність Ethernet (для стаціонарних ПК), Wi-Fi (для мобільних пристроїв та IoT), NFC (ISO/IEC 14443 для Mobile й IoT) та SPI (для комунікації ESP32 і PN532).


3.1.3	Програмний інтерфейс


Очікуваний програмний інтерфейс передбачає підтримку протоколу передачі даних TCP/IP та шифрування SSL/TLS (для HTTPS з’єднання) для всіх елементів системи.


3.1.4	Комунікаційний протокол



Для потреб програмної системи передбачено використання протоколу передачі даних HTTP(S) (обмін даними сервером та залежними компонентами), та NFC (обмін між Mobile та IoT).
HTTP(S) необхідний для втілення REST API між сервером та мобільними пристроями / IoT, що є частиною програмної системи. Специфікація REST наведена у додатку А.
NFC використовується для обміну даними за APDU (application protocol data unit) [2, с. 5]. Розглянемо детальніше принцип обміну даними у рамках нашої програмної системи. Структура повідомлень запиту-відповіді протоколу наведена у таблиці 3.1 [2, с. 7].
IoT пристрій постійно очікує нових взаємодій й при виявлені відправляє команду вибору файлу (SELECT FILE) з AID (Application ID) [2, с. 5] у якості корисного навантаження. Якщо мобільний пристрій вірно зчитує отриману інформацію й встановлює відповідність наданого AID з власним - мобільний застосунок у відповідь відправляє схвальний код обробки (SW (Status Word) [2, с. 5], детальніше в таблиці 3.2) й наявний токен користувача. Якщо під час обробки відповіді виникне помилка на програмному рівні (здатна бути відловлена конструкцією try … catch) – повертається код помилки. Приклад взаємодії наведений у таблиці 3.3.
 
Таблиця 3.1 – спрощена таблиця пари команди-відповіді для APDU
Довжина (в байтах)	Опис
1	Байт класу. По замовчуванню 0x00.
1	Байт інструкції. Необхідне значення 0xA4 – SELECT. Команда вибору даних.
2	Байти параметрів P1 та P2. Необхідне значення для P1 – 0x04, для P2 – 0x00. Саме таке значення для P1 (де третій молодший біт 1, а двоє молодших разом не дорівнюють 0) означає вибір даних за наданим AID [2, с. 37].
0,1 чи 3	Довжина даних (AID). Значення вказує N_c. Оскільки AID не перевищує 16 байт, довжина даного значення буде 1 байт.
N_c	Корисне навантаження (AID).
0-3	Довжина очікуваної відповіді. Очікується 36 байтів відформатованого токену та 2 байти статусних слів (SW). Оскільки вихідна сума складає 38 байт (N_e), очікується довжина поля в 1 байт.

До N_e 	Корисне навантаження. Очікується відформатований токен.
2	Коди обробки (SW1-SW2).
	
Таблиця 3.2 – перелік задіяних статусних слів (SW)
Значення SW1 та SW2 (hex)	Опис
90 00	Успішна обробка.
62 82	Дані до відправки коротші, ніж очікувалося. Використовується програмною системою, якщо очікується менше, ніж наявно.
Продовження таблиці 3.2
6A 80	Невірна команда. Використовується – якщо не надано AID.
6F 00	Невідома помилка. Виключення.

Таблиця 3.3 – приклад передаваних даних між пристроями IoT та Mobile
Відправник	Код (hex)	Опис
IoT	00 A4 04 00 XX … YY	Повідомлення для запиту даних, де: XX – байт довжини AID; … – AID; YY – байт довжини очікуваної відповіді.
Mobile	… XX YY	Відповідь після обробки запиту, де: … – відповідь; XX та YY – SW1 та SW2 відповідно.


3.1.5	Обмеження пам’яті


Для використання програмної системи достатньо 512 МБ вільної оперативної пам’яті (Web та Mobile). До 100 МБ постійної пам’яті для телефонного додатка.


3.1.6	Операції


Програмною системою передбачено виконання CRUD операцій для бази даних, введення-виведення для Web та Mobile, обробка запитів сервером, обробка локальної взаємодії Mobile та NFC.


3.1.7	Функції ПЗ


Ідентифікація користувачів у системі та для взаємодії з IoT елементами.
Для підтримки працездатності ідентифікації з боку Mobile необхідно регулярно оновлювати токен доступу (рис. 4).
 
Рисунок 3.4 – UML діаграма активності Mobile


3.1.8	Припущення й залежності


Залежність від пристроїв для взаємодії з програмною системою (рис. 5), та фреймворків залучених для її розробки. 
 
Рисунок 3.5 – UML діаграма розгортання


3.2	Властивості ПЗ


Програмне забезпечення здатне опрацьовувати авторизацію користувачів у системі з подальшим можливості доступу до об’єктів устаткування 


3.3	Атрибути ПЗ


3.3.1	Надійність


Надійність роботи програмного забезпечення здійснюється за допомогою транзакцій у роботі з БД, підтримкою архітектури MVC, що ускладнює вихід з ладу всієї системи разом при неполадці окремого компоненту.


3.3.2	Доступність


Наразі доступність наявна для власників мобільних пристроїв з підтримкою NFC.


3.3.3	Безпека


Природня безпека забезпечується ізольованістю системи від зовнішніх. Також задіяні протоколи шифрування та інші безпекові заходи (змінні токени).


3.3.4	Супроводжуваність


Для обслуговування програмної системо достатньо всього одного достатньо кваліфікованого працівника (Адміністратор), інші аспекти взаємодії передбачають їх інтуїтивність.


3.3.5	Переносимість


Оскільки програмне забезпечення орієнтоване на місцеве використання – переносимість у межах закладу не має викликати проблем. А перенесення у рамках філій не має відрізнятися.


3.3.6	Продуктивність


Багато потокова обробка запитів дозволяє обслуговувати значний штат співробітників, використовуючи помірні ресурси (до 2 GHz ЦП та 1 ГБ ОЗУ для сервера). Продуктивність для мобільних пристроїв є більш константною за дотриманням схожих характеристик телефону (до 1 GHz ЦП та 1 ГБ ОЗУ). Продуктивність для IoT є константною (240 MHz ЦП та 4 МБ ОЗУ).


3.4	Вимоги бази даних


Згідно з ER-моделлю (рис. 6), база даних має бути реляційною та підтримувати транзакції для надійних операцій. ER-модель містить наступні сутності:
	Person – сутність, що відображає фізичну особу в системі. Має такі властивості, як: Прізвище (LastName), Ім’я (FirstName), По батькові (MiddleName), Пошта (Email). Мінімальна необхідна інформація для ідентифікації та зв’язку;
	Account – сутність, що відображає користувача, прив’язаного до фізичної особи, у системі (PersonID). Має такі властивості, як: Логін (Login), Пароль (Password), Остання сесія (LastSession). Перші два поля необхідні для авторизації у системі. Останнє – позначає час останньої сесії у цілях безпеки;
	Permissions – сутність, що зберігає у собі перелік дозволів, прив’язаних до користувача (AccountID). З наборів цих дозволів, складаються три, раніше описані, актори. Має таку властивості, як Значення (Value);
	AccessDevice – сутність, що відображає IoT пристрій. Має такі властивості, як: Назва (Name), Опис (Description), Фізична адреса (MacAddress). Властивість показує назву виділеної зони управління доступу.
	Access – сутність, що відображає надання доступу до обраного пристрою. Має такі властивості, як: Надавач, Отримувач, Пристрій, Час створення, Час спливання дозволу, Можливість подальшого надання дозволу.
	Interaction – сутність, що відображає акт взаємодії між Mobile та IoT складовими. Має такі властивості, як: Доступ, Позначка часу, Результат. Перша властивість посилається на попередню сутність права наданого права доступу. Остання показує результат взаємодії, який може бути і невдалим.

 
Рисунок 3.6 - ER-модель даних
 
ВИСНОВКИ


У результаті. Об’єднавши зручність смартфонів, модульність мікроконтролерів та їх компонентів і гнучкість фреймворку ASP.NET, маємо програмну систему для контролю доступу до приладдя організації. Кожна частина відіграє роль у функціонуванні. Розробка демонструє можливості втілення простої для розуміння, масштабованої ідеї. 

ПЕРЕЛІК ДЖЕРЕЛ ПОСИЛАННЯ
	Secure storage // Microsoft Learn. Дата оновлення 04.04.2024. URL: https://learn.microsoft.com/en-us/dotnet/maui/platform-integration/storage/secure-storage?view=net-maui-8.0&tabs=android (дата звернення: 08.08.2024).
	ISO/IEC 7816-4:2005(E). Identification cards – Integrated circuit cards – Part 4: Organization, security and commands for interchange. – Geneva: ISO, 2005. – 83 с.
